events {
    worker_connections 1024;
}

http {
    # 上游服务器组 - Analysis Engine实例
    upstream analysis_engines {
        # 健康检查和负载均衡策略
        least_conn;  # 最少连接数负载均衡
        
        # Analysis Engine实例
        server analysis-engine-1:8005 max_fails=3 fail_timeout=30s;
        server analysis-engine-2:8005 max_fails=3 fail_timeout=30s;
        server analysis-engine-3:8005 max_fails=3 fail_timeout=30s;
        
        # 保持连接
        keepalive 32;
    }
    
    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream_addr=$upstream_addr '
                    'upstream_response_time=$upstream_response_time '
                    'request_time=$request_time';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # 基本设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # 客户端设置
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # 代理设置
    proxy_connect_timeout 30s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 主服务器配置
    server {
        listen 80;
        server_name localhost;
        
        # 健康检查端点
        location /health {
            proxy_pass http://analysis_engines/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 健康检查不需要长时间等待
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
        
        # API路由 - 分析相关
        location /api/v1/analysis/ {
            proxy_pass http://analysis_engines;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 长时间运行的分析任务
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;  # 5分钟
            proxy_read_timeout 300s;  # 5分钟
            
            # 支持WebSocket升级（如果需要）
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # API路由 - 系统管理
        location /api/v1/system/ {
            proxy_pass http://analysis_engines;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # API路由 - 管理接口
        location /api/v1/admin/ {
            proxy_pass http://analysis_engines;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 管理接口访问控制（可选）
            # allow 192.168.0.0/16;
            # allow 10.0.0.0/8;
            # deny all;
        }
        
        # 默认路由
        location / {
            proxy_pass http://analysis_engines;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # 错误页面
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
    
    # 状态监控服务器（可选）
    server {
        listen 8080;
        server_name localhost;
        
        # Nginx状态
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 192.168.0.0/16;
            allow 10.0.0.0/8;
            deny all;
        }
        
        # 上游服务器状态
        location /upstream_status {
            # 这需要nginx-plus或第三方模块
            # 这里只是示例配置
            return 200 "Upstream status monitoring\n";
            add_header Content-Type text/plain;
        }
    }
}

# 流量控制（可选）
stream {
    # TCP负载均衡（如果需要）
    upstream tcp_analysis_engines {
        server analysis-engine-1:8005;
        server analysis-engine-2:8005;
        server analysis-engine-3:8005;
    }
    
    # TCP代理（如果需要）
    # server {
    #     listen 9000;
    #     proxy_pass tcp_analysis_engines;
    #     proxy_timeout 1s;
    #     proxy_responses 1;
    # }
}
